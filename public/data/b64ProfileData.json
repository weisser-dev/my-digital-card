{
  "profile": {
    "name": "John Doe",
    "description": "Quality craftsmanship! Over 500 years of experience in carpentry as a master business in the 5th generation.",
    "photo": "assets/images/profile.jpg",
    "background": "assets/images/background.jpg"
  },
  "cardElements": [
    {
      "title": "Phone",
      "description": "+00 000 0000000",
      "href": "callto:+000000000000",
      "icon": "fa-phone"
    },
    {
      "title": "SMS",
      "description": "+00 000 0000000",
      "href": "sms:+000000000000",
      "icon": "fa-comment-sms"
    },
    {
      "title": "Email (Business)",
      "description": "john.doe@domain.com",
      "href": "mailto:john.doe@domain.com",
      "icon": "fa-envelope"
    },
    {
      "title": "Email (Personal)",
      "description": "john.private@domain.com",
      "href": "mailto:john.private@domain.com",
      "icon": "fa-envelope"
    },
    {
      "title": "Website",
      "description": "https://github.com/",
      "href": "https://github.com/weisser-dev/my-digital-card",
      "icon": "assets/icons/link.svg"
    },
    {
      "title": "Google Maps",
      "description": "Show",
      "href": "https://maps.app.goo.gl/example",
      "icon": "fa-map-location-dot"
    }
  ],
  "socialMediaElements": [
    "https://www.facebook.com/johndoe",
    "https://www.twitter.com/johndoe",
    "https://www.linkedin.com/in/johndoe",
    "https://www.instagram.com/johndoe",
    "https://www.youtube.com/user/johndoe",
    "https://www.pinterest.com/johndoe"
  ],
  "footer": {
    "copyright": {
      "text": "Made with love by my dogs"
    },
    "linkElements": [
      {
        "title": "Terms",
        "description": "Custom description here",
        "href": "https://github.com/weisser-dev/my-digital-card",
        "icon": "assets/icons/file-contract.svg"
      },
      {
        "title": "Legal",
        "modal": "true",
        "href": "",
        "modalMarkdownContent":"# Insania servo rapui etiam decipis parvo\n\n## Fui plumbo tempore tribus\n\nLorem markdownum *aethera*, pia verbis canes est secumque, paveant vir et deus.\nNaufragus vestras, di habenis sinat cum est non iuverat nam est teneas, is? Quo\nnumerem Ionio, tantum cui, nec, altera oris meae umbra.\n\nDiu me illa donec: fortes mox consurgit dum et adulantum. Ipse monte vestra\narmorum, Iuli animus noctes capillos Hyleusque **pari**, quem tibi, ille nec.\nVir submota, Nam unde unde vulnere videat **gracili** mollia luce textum, ferar\nerit idem.\n\nNunc altera, opes liquidi: ille o iamque? Plumas unguibus antiquam ablatus\ncontempto cernentem nebulas turba et nunc questus aquarum figit! Mecum ut litore\nobside poena *quod sibi* occidit quo dictas fors.\n\n## Quinque resecare\n\nLaedam cetera. Has sparsis: qua verba vultu vestra aut tibi surdaeque pietas\ndomitamque rerum felicia hoc, huic. Terras unus rore mox aliquam, umeros, ubi\nequi dato pro fraxinus matris At. Lycabas rerum Herculeis Iuno Chromin coniuge\nexstitit et ramum Cnosiaco interdum [ardescunt anus](http://terra.com/hamis)\nConfremuere. Gratare non!\n\nSive fratres amor, [sed](http://iuxta.org/), et *cum obscurus pulchros*\ntractoque satis perceperat Baucis vultus deus vacca movi nulla, mihi. Nato\nsatia! Nunc [anus](http://dum.io/) voces hic, vino facto tamen devovet Athenae\nsidera. Ferat est postque tecta negabo forsitan, et leonem fauce. Simul erectus,\nnuda.\n\nErat oraque magis ingeminat lupis et sonantes animos ab spectabilis aureus tibi,\nviribus movit bisque. Non vittis ut patri cubito petite, cava\n[pietas](http://inmeritamcaptatur.io/iacebasest.html), solus.\n\nNympha arte, vina sunt at quercus venerat Nabataeus. Et non, silva non neque\nEurynome dotale. *Cum Venus arma*, ad neci sub ferat, fuerit, hirsutus corniger\npulsi; candentia super ferre.",
        "icon": "fa-scale-unbalanced"
      }
    ]
  }
}
